{"meta":{"generator":"0.9.0","format":20,"date":1605434263417},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"\r\n<div align=\"center\">\r\n  <br />\r\n  <p>\r\n    <a href=\"https://discord-akago.github.io\"><img src=\"https://i.imgur.com/ENzIUyF.png\" width=\"546\" alt=\"Discord Akago\"/></a>\r\n  </p>\r\n  <p>\r\n    <a href=\"https://www.npmjs.com/package/discord-js-akago\"><img src=\"https://img.shields.io/npm/v/discord.js-akago.svg\" alt=\"NPM Version\" /></a>\r\n    <a href=\"https://www.npmjs.com/package/discord.js-akago\"><img src=\"https://img.shields.io/npm/dt/discord.js-akago.svg\" alt=\"NPM Downloads\" /></a>\r\n    <a href=\"https://img.shields.io/david/discord-js-akago/discord.js-akago\"><img src=\"https://img.shields.io/david/discord-js-akago/discord.js-akago\" alt=\"Deps\" /></a>\r\n  </p>\r\n  <p>\r\n    <a href=\"https://nodei.co/npm/discord.js-akago/\"><img src=\"https://nodei.co/npm/discord.js-akago.png?downloads=true\" alt=\"NPM Install Info\" /></a>\r\n  </p>\r\n</div>\r\n\r\n## Features\r\n\r\n#### Completely modular commands, and listeners.\r\n  - Reading files recursively from directories.\r\n  - Easy to handle listeners and commands.\r\n\r\n#### Flexible command handling and creation.\r\n  - Command aliases.\r\n  - Command cooldowns.\r\n  - Client and user permission checks.\r\n  - Multiple prefixes and mention prefixes.\r\n  - Owner only commands.\r\n  - Guild only commands.\r\n  - NSFW only channel commands.\r\n\r\n#### Flexible event handling and creation.\r\n- Once or on listeners.\r\n- Listener emitter.\r\n\r\n#### Helpful events and modular listeners.\r\n  - Events for different stages of command handling.\r\n  - Reloadable listeners and commands\r\n\r\n## Links\r\n- [Website](https://discord-akago.github.io)\r\n- [Repository](https://github.com/discord-js-akago/discord.js-akago)  \r\n- [Discord](https://discord.gg/arTauDY)  \r\n\r\n## Contributing\r\nOpen an issue or a pull request!  \r\nEveryone is welcome to do so. ","path":"docs/general/welcome.md"}}},"getting started":{"name":"Getting Started","files":{"gettingStarted":{"name":"Client Structure","type":"md","content":"## Getting started.\r\n### Installation\r\nBefore anything else you will need to install the **discord.js-akago** and **discord.js** packages.\r\n`npm install discord.js-akago`\r\n`npm install discord.js`\r\nThen you want to create a new file in your main directory lets call it `bot.js`\r\nSo right now your project directory should look something like this:\r\n```\r\nmyProject\r\n|___ node_modules\r\n\t index.js\r\n```\r\n### Main File\r\nInside your `index.js`, require `discord.js-akago` and extend the `AkagoClient` class.\r\n```js\r\nconst { AkagoClient } = require('discord.js-akago');\r\n\r\nclass myClient extends AkagoClient {\r\n\t\tconstructor() {\r\n\t\tsuper({\r\n\t\t\t// Akago Options\r\n\t\t\townerID: 'Your user ID',\r\n\t\t    token: 'Your discord bot token',\r\n\t\t}, {\r\n\t\t\t// Discord.js Client Options\r\n\t\t});\r\n\t}\r\n\tstart() {\r\n\t\tthis.build();\r\n\t}\r\n}\r\n\r\nconst client = new myClient();\r\nclient.start();\r\n```\r\nThe first parameter of the `super` is the [AkagoClient options](https://discord-akago.github.io/#/docs/main/main/typedef/AkagosOptions).\r\nThe second parameter are [Discord.js Client Options](https://discord.js.org/#/docs/main/stable/typedef/ClientOptions).\r\nLets add the `disableMentions` option to our client.\r\n```js\r\nconst { AkagoClient } = require('discord.js-akago');\r\n\r\nclass myClient extends AkagoClient {\r\n\t\tconstructor() {\r\n\t\tsuper({\r\n\t\t\townerID: ['Your user ID'],\r\n\t\t    token: 'Your discord bot token',\r\n\t\t}, {\r\n\t\t\tdisableMentions: 'everyone',\r\n\t\t});\r\n\t}\r\n\tstart() {\r\n\t\tthis.build();\r\n\t}\r\n}\r\n\r\nconst client = new myClient();\r\nclient.start();\r\n```\r\nYour bot will now login and your ready to move onto making handlers!\r\n\r\n## Reference\r\nYou can compare your code to the guides code here [here](https://github.com/discord-akago/guide/tree/main/Code%20Samples/Client%20Structure)","path":"docs/getting started/gettingStarted.md"},"firstCommand":{"name":"Command","type":"md","content":"## First Command\r\n### Command Handler\r\nFor making a command handler we will need to import and instantiate the `CommandHandler`\r\n```js\r\nconst { AkagoClient, CommandHandler } = require('discord.js-akago');\r\n\r\nclass myClient extends AkagoClient {\r\n\tconstructor() {\r\n\t\tsuper({\r\n\t\t\townerID: ['Your user ID'],\r\n\t\t\ttoken: 'Your discord bot token',\r\n\t\t}, {\r\n\t\t\tdisableMentions:  'everyone',\r\n\t\t});\r\n\t\tthis.commandHandler = new CommandHandler(this, {\r\n\t\t\t// Options for the command handler.\r\n\t\t});\r\n\t}\r\n\tstart()  {\r\n\t\tthis.build();\r\n\t}\r\n}\r\n\r\nconst client = new myClient();\r\nclient.start();\r\n```\r\n#### Command Handler Options\r\nThe `commandDirectory` option tells the handler what folder all your commands are located.\r\nThe `prefix` option is the prefix(es) you want to use, you can have multiple by using an array.\r\n```js\r\nthis.commandHandler = new CommandHandler(this, {\r\n\tcommandDirectory: './commands',\r\n\tprefix: '!', // or ['?', '!']\r\n});\r\n```\r\nYou can view all of the `commandHandlerOptions` [here](https://discord-akago.github.io/#/docs/main/main/typedef/commandHandlerOptions).\r\n### Ping Command\r\nTime to make your first command!\r\nIn the command handler options we specified a `commandDirectory` go to that folder directory and create a new file called `ping.js`. \r\nFirst of all we want to import the `Command` class.\r\n```js\r\nconst { Command } = require('discord.js-akago');\r\n```\r\nNow here is a basic ping command:\r\n```js\r\nconst { Command } = require('discord.js-akago');\r\n\r\nmodule.exports = class PingCommand extends Command {\r\n\tconstructor() {\t\t\r\n\t\tsuper('ping', {\r\n\t\t\tdescription: 'Pong!',\r\n\t\t\taliases: ['p'],\r\n\t\t\tcategory: 'Utilities',\r\n\t\t});\r\n\t}\r\n\t\r\n\texecute(message) {\r\n\t\treturn message.reply('Pong!');\r\n\t}\r\n};\r\n```\r\nThe first parameter of the `super` is the unique command name.\r\nThe second parameter are the options of the command such as: `aliases`, `cooldown`, `ownerOnly` ect.\r\nYou can view a full list of all command options [here](https://discord-akago.github.io/#/docs/main/main/typedef/CommandOptions).\r\nThe third optional parameter are custom opts of the command, this is not needed.\r\nThe execute method if the function ran when the command is used.\r\n\r\nIf everything was done correctly you ping command should now work!\r\n\r\n### Reference\r\nYou can compare your code to the guides code here [here](https://github.com/discord-akago/guide/tree/main/Code%20Samples/CommandHandling).","path":"docs/getting started/firstCommand.md"},"firstListener":{"name":"Listener","type":"md","content":"## First Listener\r\n### Listener Handler\r\nFor making a listener handler we will need to import and instantiate the `ListenerHandler` similar to how we did the `CommandHandler`\r\n```js\r\nconst { AkagoClient, CommandHandler, ListenerHandler } = require('discord.js-akago');\r\n\r\nclass myClient extends AkagoClient {\r\n\tconstructor() {\r\n\t\tsuper({\r\n\t\t\townerID: ['Your user ID'],\r\n\t\t\ttoken: 'Your discord bot token',\r\n\t\t}, {\r\n\t\t\tdisableMentions:  'everyone',\r\n\t\t});\r\n\t\tthis.commandHandler = new CommandHandler(this, {\r\n\t\t\tcommandDirectory: './commands',\r\n\t\t\tprefix: '!', // or ['?', '!']\r\n\t\t});\r\n\t\tthis.listenerHandler = new ListenerHandler(this, {\r\n\t\t\t// Options for the listener handler.\r\n\t\t});\r\n\t}\r\n\tstart()  {\r\n\t\tthis.build();\r\n\t}\r\n}\r\n\r\nconst client = new myClient();\r\nclient.start();\r\n```\r\n#### Listener Handler Options\r\nThe `listenerDirectory` option tells the handler what folder all your listener are located.\r\n```js\r\nthis.listenerHandler = new ListenerHandler(this, {\r\n\tlistenerDirectory: './listeners',\r\n});\r\n```\r\nYou can view all of the `listenerHandlerOptions` [here](https://discord-akago.github.io/#/docs/main/main/typedef/listenerHandlerOptions).\r\n### Ready event\r\nTime to make your first listener!\r\nIn the listener handler options you specified a directory to a listener folder go to that directory and make a new file, lets call it `ready.js`.\r\nFirst of all we want to import the `Listener` class.\r\n```js\r\nconst { Listener } = require('discord.js-akago');\r\n```\r\nNow here is a basic ready listener:\r\n```js\r\nconst { Listener } = require('discord.js-akago');\r\n\r\nmodule.exports = class ReadyListener extends Listener {\r\n\tconstructor() {\t\t\r\n\t\tsuper('ready', {\r\n\t\t\tonce: true,\r\n\t\t});\r\n\t}\r\n\t\r\n\texecute() {\r\n\t\tconsole.log('Im ready!');\r\n\t}\r\n};\r\n```\r\nThe first parameter of the `super` is the unique listener name.\r\nThe second parameter are the options of the command such as: `emitter`, `once` ect.\r\nYou can view a full list of all command options [here](https://discord-akago.github.io/#/docs/main/main/typedef/ListenerOptions).\r\nThe third optional parameter are custom opts of the listener, this is not needed.\r\nThe execute method if the function ran when the listener is emitted.\r\n\r\nIf everything was done correctly your ready listener should now work!\r\n## Reference\r\nYou can compare your code to the guides code here [here](https://github.com/discord-akago/guide/tree/main/Code%20Samples/ListenerHandling)\r\n## Akago Command Handler Listeners\r\nAkago has events that are emitted through out various stages of the command handling. Such as there is an event when a member dosn't have permissions to do a command or they are on cooldown ect.\r\nWe can use these events to send messages when they are missing something to execute the command.\r\n#### Cooldown Event\r\nThe `cooldown` event is emitted when a member tries to execute a command but they are on cooldown.\r\nWe can use this to send a message telling them that they are on a cooldown.\r\nLets go to our listener directory and make a new file, lets call it `cooldown.js`\r\n```js\r\nconst { Listener } = require('discord.js-akago');\r\n\r\nmodule.exports = class CooldownListener extends Listener {\r\n\tconstructor() {\t\t\r\n\t\tsuper('cooldown', {\r\n\t\t\temitter: 'commandHandler',\r\n\t\t\tonce: false,\r\n\t\t});\r\n\t}\r\n\t\r\n\texecute(message, command, timeLeft) {\r\n\t\tconst remaining = (timeLeft / 1000).toFixed(1);\r\n\t\tconst { name } = command;\r\n\t\tmessage.channel.send(`Wait ${remaining} more second(s) before reusing the ${name} command.`);\r\n\t}\r\n};\r\n```\r\n##### Cooldown Parameters\r\nFirst parameter is the discord `message` that was sent.\r\nSecond parameter is the `command` that was used.\r\nThird parameter is the time remaining on the member's cooldown in milliseconds.\r\n### Command Blocked Listener\r\nThe `commandBlocked` event is emitted when a command can't be executed for either: the command is `guildOnly` but it was send in DM's, the command is a `ownerOnly` but the user who executed the command is not an owner or the command is a `nsfw` but the command was not used in a NSFW channel.\r\nLets go to our listener directory and create a new file called `commandBlocked.js`.\r\n```js\r\nconst { Listener } = require('discord.js-akago');\r\n\r\nmodule.exports = class CommandBlockedListener extends Listener {\r\n\tconstructor() {\r\n\t\tsuper('commandBlocked', {\r\n\t\t\temitter: 'commandHandler',\r\n\t\t\tonce: false,\r\n\t\t});\r\n\t}\r\n\r\n\texecute(message, command, reason) {\r\n\t\tconst { name } = command;\r\n\t\tconst reasons = {\r\n\t\t\t'owner': `The ${name} command can only be used by the owner of the bot.`,\r\n\t\t\t'nsfw': `The ${name} command can only be used in a nsfw channel.`,\r\n\t\t\t'dm': `The ${name} command can only be used in guilds.`,\r\n\t\t};\r\n\t\t\t\r\n\t\tmessage.channel.send(reasons[reason]);\r\n\t}\r\n};\r\n```\r\nFirst parameter is the discord `message` that was sent.\r\nThe second parameter is the `command` that was used.\r\nThird parameter is the reason the command was blocked either `owner`, `dm` or `nsfw`.\r\n### Missing Permissions Listener\r\nThe `missingPermissions` event will emit when a command is used but either the client or member is missing permissions to run the command.\r\nLets go to our listener directory and create a new file lets call it `missingPermissions.js`.\r\n```js\r\nconst { Listener } = require('discord.js-akago');\r\n\r\nmodule.exports = class MissingPermissionsListener extends Listener {\r\n\tconstructor() {\r\n\t\tsuper('missingPermissions', {\r\n\t\t\temitter: 'commandHandler',\r\n\t\t\tonce: false,\r\n\t\t});\r\n\t}\r\n\r\n\texecute(message, command, type, missing) {\r\n\t\tconst perms = missing.map(p => p.replace(/_/g, ' ').toLowerCase()).join(', ');\r\n\t\tconst user = type === 'client' ? 'I am' : 'You are';\r\n\t\tconst { name } = command;\r\n\t\treturn message.channel.send(`${user} missing permissions ${perms} for the command ${name}`);\r\n\t}\r\n};\r\n```\r\nFirst parameter is a discord `message` that was sent.\r\nThe second parameter is the `command` that was used.\r\nThe third parameter is whos missing the permissions either `client` or `member`.\r\nThe fourth parameter is a filtered array of the permission that is missing that is needed for the command.\r\n\r\n## Reference\r\nYou can compare your code to the guides code here [here](https://github.com/discord-akago/guide/tree/main/Code%20Samples/CommandHandlerListeners)","path":"docs/getting started/firstListener.md"},"firstInhibitor":{"name":"Inhibitor","type":"md","content":"## First Inhibitors\r\n### What Is A Inhibitor\r\nAn inhibitor is function executed before a command is executed. \r\nIf the execute function returns `true` the command won't be executed. If returned `false` it will execute.\r\nThis is useful for making custom features for your commands such as easily blacklisting member's from using commands.\r\n### Inhibitors Handler\r\nFor making a inhibitor handler we will need to import and instantiate the `InhibitorHandler` similar to how we did the `CommandHandler` and the `ListenerHandler`\r\n```js\r\nconst { AkagoClient, CommandHandler, ListenerHandler, InhibitorHandler } = require('discord.js-akago');\r\n\r\nclass myClient extends AkagoClient {\r\n\tconstructor() {\r\n\t\tsuper({\r\n\t\t\townerID: ['Your user ID'],\r\n\t\t\ttoken: 'Your discord bot token',\r\n\t\t}, {\r\n\t\t\tdisableMentions:  'everyone',\r\n\t\t});\r\n\t\tthis.commandHandler = new CommandHandler(this, {\r\n\t\t\tcommandDirectory: './commands',\r\n\t\t\tprefix: '!', // or ['?', '!']\r\n\t\t});\r\n\t\tthis.listenerHandler = new ListenerHandler(this, {\r\n\t\t\tlistenerDirectory: './listeners',\r\n\t\t});\r\n\t\tthis.inhibitorHandler = new InhibitorHandler(this, {\r\n\t\t\t// Options for the inhibitor handler.\r\n\t\t});\r\n\t}\r\n\tstart()  {\r\n\t\tthis.build();\r\n\t}\r\n}\r\n\r\nconst client = new myClient();\r\nclient.start();\r\n```\r\n#### Inhibitor Handler Options\r\nThe `inhibitorHandler` option tells the handler what folder all your inhibitors are located.\r\n```js\r\nthis.inhibitorHandler = new InhibitorHandler (this, {\r\n\tinhibitorDirectory: './inhibitors',\r\n});\r\n```\r\nYou can view all of the `inhibitorHandlerOptions` [here](https://discord-akago.github.io/#/docs/main/main/typedef/inhibitorHandlerOptions).\r\n### Blacklisting Members\r\nGo to your inhibitors folder and create a new file called `blacklist.js`\r\n```js\r\nconst { Inhibitor } = require('discord.js-akago');\r\n\r\nmodule.exports = class BlackListInhibitor extends Inhibitor {\r\n\tconstructor() {\r\n\t\tsuper('blacklist');\r\n\t}\r\n\t\r\n\texecute(message) {\r\n\t\tconst blacklists = ['611466971371929602']; \r\n\t\treturn blacklists.includes(message.author.id);\r\n\t}\r\n};\r\n```\r\nThe first parameter is the discord `message` that was sent.\r\nThe second parameter is the `command` that was used.\r\n\r\n### Reference\r\nYou can compare your code to the guides code here [here](https://github.com/discord-akago/guide/tree/main/Code%20Samples/InhibitorHandling).","path":"docs/getting started/firstInhibitor.md"}}},"snippets":{"name":"Snippets","files":{"help":{"name":"Help Command","type":"md","content":"## Help Command\r\n```js\r\nconst { Command } = require('discord.js-akago');\r\nconst { MessageEmbed } = require('discord.js');\r\n\r\nmodule.exports = class HelpCommand extends Command {\r\n    constructor() {\r\n        super('help', {\r\n            description: 'Display a list of all commands I have.',\r\n            category: 'Utilities',\r\n        });\r\n    }\r\n\r\n    async execute(message, [commandName]) {\r\n        const { commands, util } = this.client;\r\n        const embed = new MessageEmbed().setColor('BLUE');\r\n        const command = commands.get(commandName);\r\n\r\n        if (command) {\r\n            embed.setTitle(`\\`${command.name}\\``);\r\n            embed.addField('Description', command.description);\r\n            if (command.aliases.length) {\r\n                embed.addField('Aliases', command.aliases.map(a => `\\`${a}\\``).join(' '));\r\n            }\r\n        }\r\n        else {\r\n            const categories = util.removeDuplicates(commands.map(c => c.category));\r\n            embed.setDescription('For additional info on a command, use `?help <command>`');\r\n            for (const category of categories) {\r\n                const filteredCommands = commands.filter(c => c.category == category);\r\n                embed.addFields([{\r\n                    name: category || 'Misc',\r\n                    value: filteredCommands.map(c => `\\`${c.name}\\``).join(' '),\r\n                }]);\r\n            }\r\n        }\r\n\r\n        message.channel.send(embed);\r\n    }\r\n}; \r\n```","path":"docs/snippets/help.md"},"ping":{"name":"Ping Command","type":"md","content":"## Ping Command\r\n```js\r\nconst { Command } = require('discord.js-akago');\r\n\r\nmodule.exports = class PingCommand extends Command {\r\n    constructor() {\r\n        super('ping', {\r\n            description: 'Pong!',\r\n            category: 'Utilities',\r\n        });\r\n    }\r\n\r\n    async execute(message) {\r\n        const msg = await message.channel.send('Pinging...');\r\n        const messagePing = msg.createdTimestamp - message.createdTimestamp;\r\n        msg.edit(`Pong! ${messagePing}ms \\nHeart beat: ${this.client.ws.ping}ms`);\r\n    }\r\n}; \r\n```","path":"docs/snippets/ping.md"}}}},"classes":[{"name":"AkagoClient","construct":{"name":"AkagoClient","description":"The Akago framework client.\rCreates the handlers and sets them up.","params":[{"name":"options","description":"Options to use for the framework.","type":[[["AkagosOptions"]]]},{"name":"clientOptions","description":"Options for Discord JS client.","optional":true,"type":[[["ClientOptions"]]]}]},"props":[{"name":"commands","description":"Collection of all loaded commands.","type":[[["Collection"]]],"meta":{"line":18,"file":"AkagoClient.js","path":"src/struct"}},{"name":"aliases","description":"Collection of all aliases","type":[[["Collection"]]],"meta":{"line":24,"file":"AkagoClient.js","path":"src/struct"}},{"name":"events","description":"Collection of all events.","type":[[["Collection"]]],"meta":{"line":30,"file":"AkagoClient.js","path":"src/struct"}},{"name":"inhibitors","description":"Collection of all inhibitors","type":[[["Collection"]]],"meta":{"line":36,"file":"AkagoClient.js","path":"src/struct"}},{"name":"cooldowns","description":"Collection of all cooldowns","type":[[["Collection"]]],"meta":{"line":42,"file":"AkagoClient.js","path":"src/struct"}},{"name":"util","description":"Utility methods.","type":[[["ClientUtil"]]],"meta":{"line":48,"file":"AkagoClient.js","path":"src/struct"}},{"name":"ownerID","description":"Discord ID of the client owner(s).","type":[[["Snowflake"]],[["Array","<"],["Snowflake",">"]]],"meta":{"line":54,"file":"AkagoClient.js","path":"src/struct"}},{"name":"token","description":"Discord bot's token.","type":[[["string"]]],"meta":{"line":59,"file":"AkagoClient.js","path":"src/struct"}}],"methods":[{"name":"isOwner","description":"Checks if the user is the ownner of this bot.","params":[{"name":"user","description":"User to check","type":[[["UserResolvable"]]]}],"returns":[[["boolean"]]],"meta":{"line":67,"file":"AkagoClient.js","path":"src/struct"}},{"name":"build","description":"Logs the Akago Client in and loads events and commands","meta":{"line":77,"file":"AkagoClient.js","path":"src/struct"}}],"meta":{"line":11,"file":"AkagoClient.js","path":"src/struct"}},{"name":"Command","construct":{"name":"Command","description":"Creates a new command.","params":[{"name":"name","description":"Name of the command.","type":[[["string"]]]},{"name":"options","description":"Options for the command.","optional":true,"default":"{}","type":[[["CommandOptions"]]]},{"name":"opts","description":"Custom options for the command class.","optional":true,"default":"{}","type":[[["opts"]]]}]},"props":[{"name":"name","description":"Name of the command","type":[[["string"]]],"meta":{"line":23,"file":"Command.js","path":"src/struct/command"}},{"name":"description","description":"Description of the command.","type":[[["string"]]],"meta":{"line":28,"file":"Command.js","path":"src/struct/command"}},{"name":"category","description":"Category of the command","type":[[["string"]]],"meta":{"line":33,"file":"Command.js","path":"src/struct/command"}},{"name":"aliases","description":"Aliases of the command.","type":[[["Array"]]],"meta":{"line":38,"file":"Command.js","path":"src/struct/command"}},{"name":"cooldown","description":"The command cooldown in seconds.","type":[[["number"]]],"meta":{"line":43,"file":"Command.js","path":"src/struct/command"}},{"name":"ownerOnly","description":"Whether or not to allow client owner(s) only.","type":[[["boolean"]]],"meta":{"line":48,"file":"Command.js","path":"src/struct/command"}},{"name":"guildOnly","description":"Whether or not the commans can only be used in a guild","type":[[["boolean"]]],"meta":{"line":53,"file":"Command.js","path":"src/struct/command"}},{"name":"nsfw","description":"Whether the command can only be done in a NSFW channel.","type":[[["boolean"]]],"meta":{"line":58,"file":"Command.js","path":"src/struct/command"}},{"name":"memberPermissions","description":"Permissions required by the member to run this command.","type":[[["Array","<"],["PermissionResolvable",">"]]],"meta":{"line":63,"file":"Command.js","path":"src/struct/command"}},{"name":"clientPermissions","description":"Permissions required by the client to run this command.","type":[[["Array","<"],["PermissionResolvable",">"]]],"meta":{"line":68,"file":"Command.js","path":"src/struct/command"}},{"name":"client","description":"The Akago Client.","type":[[["AkagoClient"]]],"meta":{"line":73,"file":"Command.js","path":"src/struct/command"}},{"name":"filepath","description":"The file path to the command.","type":[[["string"]]],"meta":{"line":78,"file":"Command.js","path":"src/struct/command"}}],"meta":{"line":8,"file":"Command.js","path":"src/struct/command"}},{"name":"CommandHandler","extends":[[["EventEmitter"]]],"construct":{"name":"CommandHandler","description":"Loads commands and handles messages.","params":[{"name":"client","description":"The Akago Client.","type":[[["AkagoClient"]]]},{"name":"options","description":"Options for the command handler.","type":[[["commandHandlerOptions"]]]}]},"props":[{"name":"commandDirectory","description":"Directory to commands.","type":[[["string"]]],"meta":{"line":36,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"prefix","description":"Default command prefix(es)","type":[[["string"]],[["Array","<"],["string",">"]]],"meta":{"line":41,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"allowMentionPrefix","description":"Allows mentioning the bot as a valid prefix.","type":[[["boolean"]]],"meta":{"line":46,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"blockBots","description":"Command handler will block message's from bots.","type":[[["boolean"]]],"meta":{"line":52,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"blockClient","description":"Command handler will block message's from the client.","type":[[["boolean"]]],"meta":{"line":58,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"ignorePermissions","description":"Array of user's IDs that will ignore permission checks.","type":[[["Array","<"],["Snowflake",">"]]],"meta":{"line":64,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"ignoreCooldowns","description":"Array of user's IDs that will ignore command cooldowns.","type":[[["Array","<"],["Snowflake",">"]]],"meta":{"line":70,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"defaultCooldown","description":"Default cooldown of commands that don't have their own cooldown. Set to 0 for no default cooldown.","type":[[["number"]]],"meta":{"line":76,"file":"CommandHandler.js","path":"src/struct/command"}}],"methods":[{"name":"loadCommand","description":"Loads a Command.","params":[{"name":"filepath","description":"Path to file.","type":[[["string"]]]}],"meta":{"line":92,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"reloadCommand","description":"Reloads a command.","params":[{"name":"name","description":"Name of the command.","type":[[["string"]]]}],"meta":{"line":113,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"handle","description":"Handlers messages.","params":[{"name":"message","description":"Message to hanle.","type":[[["DiscordMessage"]]]}],"async":true,"meta":{"line":125,"file":"CommandHandler.js","path":"src/struct/command"}}],"events":[{"name":"missingPermissions","description":"Emitted when the client or user is missing permissions to execute a command.","params":[{"name":"message","description":"The message sent.","type":[[["DiscordMessage"]]]},{"name":"command","description":"The command used.","type":[[["Command"]]]},{"name":"missingPerms","description":"The permissions missing.","type":[[["Array"]]]}],"meta":{"line":237,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"commandBlocked","description":"Emitted when a command is blocked due to it being a onlyOnly, guildOnly or NSFW command.","params":[{"name":"message","description":"The message sent.","type":[[["DiscordMessage"]]]},{"name":"command","description":"The command used.","type":[[["Command"]]]},{"name":"type","description":"The reason the command was blocked either: owner, dm or nsfw.","type":[[["string"]]]}],"meta":{"line":245,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"cooldown","description":"Emitted when a command is used but the user is on cooldown","params":[{"name":"message","description":"The message sent.","type":[[["DiscordMessage"]]]},{"name":"command","description":"The command used.","type":[[["Command"]]]},{"name":"timeLeft","description":"The time left on the cooldown in milliseconds.","type":[[["number"]]]}],"meta":{"line":253,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"commandUsed","description":"Emitted when a command is successfully executed","params":[{"name":"message","description":"The message sent.","type":[[["DiscordMessage"]]]},{"name":"command","description":"The command used.","type":[[["Command"]]]}],"meta":{"line":261,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"invalidCommand","description":"Emitted when a command is invalid","params":[{"name":"message","description":"The message sent.","type":[[["DiscordMessage"]]]}],"meta":{"line":268,"file":"CommandHandler.js","path":"src/struct/command"}}],"meta":{"line":15,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"Inhibitor","construct":{"name":"Inhibitor","description":"Creates a new command.","params":[{"name":"name","description":"Name of the inhibitor.","type":[[["string"]]]},{"name":"opts","description":"Custom options for the inhibitor class.","optional":true,"default":"{}","type":[[["opts"]]]}]},"props":[{"name":"name","description":"The name of the inhibitor","type":[[["string"]]],"meta":{"line":12,"file":"Inhibitor.js","path":"src/struct/inhibitor"}}],"meta":{"line":7,"file":"Inhibitor.js","path":"src/struct/inhibitor"}},{"name":"InhibitorHandler","construct":{"name":"InhibitorHandler","description":"Loads inhibitors.","params":[{"name":"client","description":"The Akago Client.","type":[[["AkagoClient"]]]},{"name":"options","description":"Options for the inhibitor handler.","type":[[["inhibitorHandlerOptions"]]]}]},"props":[{"name":"inhibitorDirectory","description":"Path to the inhibitor directory.","type":[[["string"]]],"meta":{"line":20,"file":"InhibitorHandler.js","path":"src/struct/inhibitor"}}],"methods":[{"name":"loadInhibitor","description":"Loads an inhibitor.","params":[{"name":"filepath","description":"The file path to the inhibitor.","type":[[["string"]]]}],"meta":{"line":32,"file":"InhibitorHandler.js","path":"src/struct/inhibitor"}},{"name":"reloadCommand","description":"Reloads an inhibitor.","params":[{"name":"name","description":"Name of the inhibitor to reload.","type":[[["string"]]]}],"meta":{"line":48,"file":"InhibitorHandler.js","path":"src/struct/inhibitor"}}],"meta":{"line":11,"file":"InhibitorHandler.js","path":"src/struct/inhibitor"}},{"name":"Listener","construct":{"name":"Listener","description":"Creates a new listener.","params":[{"name":"name","description":"Name of the listener.","type":[[["string"]]]},{"name":"options","description":"Options for the listener.","optional":true,"type":[[["ListenerOptions"]]]},{"name":"opts","description":"Custom options for the listener class.","optional":true,"default":"{}","type":[[["object"]]]}]},"props":[{"name":"name","description":"The event name that will be emitted.","type":[[["string"]]],"meta":{"line":16,"file":"Listener.js","path":"src/struct/listener"}},{"name":"type","description":"Whether the event will be on or once.","type":[[["boolean"]]],"meta":{"line":21,"file":"Listener.js","path":"src/struct/listener"}},{"name":"emitter","description":"The emitter of the event.","type":[[["emitter"]]],"meta":{"line":26,"file":"Listener.js","path":"src/struct/listener"}},{"name":"client","description":"The Akago Client.","type":[[["AkagoClient"]]],"meta":{"line":31,"file":"Listener.js","path":"src/struct/listener"}},{"name":"filepath","description":"The file path to the command.","type":[[["string"]]],"meta":{"line":36,"file":"Listener.js","path":"src/struct/listener"}}],"meta":{"line":8,"file":"Listener.js","path":"src/struct/listener"}},{"name":"ListenerHandler","construct":{"name":"ListenerHandler","description":"Loads commands and handles messages.","params":[{"name":"client","description":"The Akago Client.","type":[[["AkagoClient"]]]}]},"props":[{"name":"listenerDirectory","description":"Directory to listeners.","type":[[["string"]]],"meta":{"line":23,"file":"ListenerHandler.js","path":"src/struct/listener"}}],"methods":[{"name":"loadListener","description":"Loads a Listener.","params":[{"name":"filepath","description":"Path to file.","type":[[["string"]]]}],"meta":{"line":35,"file":"ListenerHandler.js","path":"src/struct/listener"}},{"name":"reloadListener","description":"Reloads a listener","params":[{"name":"name","description":"Name of the listener wanted to reload.","type":[[["string"]]]}],"meta":{"line":52,"file":"ListenerHandler.js","path":"src/struct/listener"}}],"meta":{"line":10,"file":"ListenerHandler.js","path":"src/struct/listener"}},{"name":"ClientUtil","construct":{"name":"ClientUtil","description":"Akago client utilities.","params":[{"name":"client","description":"The Akago Client.","type":[[["AkagoClient"]]]}]},"methods":[{"name":"removeDuplicates","description":"Removes any duplicate elements from an array.","params":[{"name":"array","description":"Array to remove duplicate elements from.","type":[[["Array"]]]}],"returns":[[["Array"]]],"meta":{"line":15,"file":"ClientUtil.js","path":"src/util"}},{"name":"capitalize","description":"Capitalizes the first character of a string.","params":[{"name":"string","description":"String to be capitalized","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":24,"file":"ClientUtil.js","path":"src/util"}}],"meta":{"line":6,"file":"ClientUtil.js","path":"src/util"}}],"interfaces":[],"typedefs":[{"name":"AkagosOptions","description":"Options used to determine how the framework behaves.","type":[[["Object"]]],"props":[{"name":"ownerID","description":"Discord ID of the client owner(s).","type":[[["Snowflake"]],[["Array","<"],["Snowflake",">"]]]},{"name":"token","description":"Discord bot's token.","type":[[["string"]]]}],"meta":{"line":88,"file":"AkagoClient.js","path":"src/struct"}},{"name":"CommandOptions","description":"Options to use for command execution behavior.","type":[[["Object"]]],"props":[{"name":"description","description":"Description of the command.","optional":true,"default":"''","type":[[["string"]]]},{"name":"category","description":"Category of the command.","optional":true,"type":[[["string"]]]},{"name":"aliases","description":"Aliases of the command.","optional":true,"default":"[]","type":[[["string"]]]},{"name":"ownerOnly","description":"Whether or not to allow client owner(s) only.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"cooldown","description":"The command cooldown in seconds.","optional":true,"default":3,"type":[[["number"]]]},{"name":"memberPermissions","description":"Permissions required by the member to run this command.","optional":true,"default":"[]","type":[[["Array","<"],["PermissionResolvable",">"]]]},{"name":"clientPermissions","description":"Permissions required by the client to run this command.","optional":true,"default":"[]","type":[[["Array","<"],["PermissionResolvable",">"]]]},{"name":"guildOnly","description":"Whether or not the commans can only be used in a guild","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"nsfw","description":"Whether the command can only be done in a NSFW channel.","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":90,"file":"Command.js","path":"src/struct/command"}},{"name":"commandHandlerOptions","type":[[["Object"]]],"props":[{"name":"commandDirectory","description":"File path to command directory.","type":[[["string"]]]},{"name":"prefix","description":"Prefixes for the command handler.","type":[[["string"]],[["Array"]]]},{"name":"allowMentionPrefix","description":"Allows mentioning the bot as a valid prefix.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"blockBots","description":"Command handler will block message's from bots.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"blockClient","description":"Command handler will block message's from the client.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignorePermissions","description":"Array of user's IDs that will ignore permission checks.","optional":true,"default":"[]","type":[[["Array","<"],["Snowflake",">"]]]},{"name":"ignoreCooldown","description":"Array of user's IDs that will ignore command cooldowns.","optional":true,"default":"[]","type":[[["Array","<"],["Snowflake",">"]]]},{"name":"defaultCooldown","description":"Default cooldown of commands that don't have their own cooldown. Set to 0 for no default cooldown.","optional":true,"default":3,"type":[[["number"]]]}],"meta":{"line":225,"file":"CommandHandler.js","path":"src/struct/command"}},{"name":"inhibitorHandlerOptions","type":[[["Object"]]],"props":[{"name":"inhibitorDirectory","description":"File path to inhibitor directory.","type":[[["string"]]]}],"meta":{"line":59,"file":"InhibitorHandler.js","path":"src/struct/inhibitor"}},{"name":"ListenerOptions","description":"Options to use for command execution behavior.","type":[[["Object"]]],"props":[{"name":"once","description":"Whether the event will be on or once.","optional":true,"default":"'on'","type":[[["boolean"]]]},{"name":"emitter","description":"The emitter of the event.","optional":true,"default":"client","type":[[["emitter"]]]}],"meta":{"line":48,"file":"Listener.js","path":"src/struct/listener"}},{"name":"listenerHandlerOptions","type":[[["Object"]]],"props":[{"name":"listenerDirectory","description":"File path to listener directory.","type":[[["string"]]]}],"meta":{"line":66,"file":"ListenerHandler.js","path":"src/struct/listener"}}],"externals":[]}